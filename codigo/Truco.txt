#include <iostream>
#include "jogador.hpp"


enum EstadoTruco
{
    NORMAL = 1,
    TRUCO = 4,
    SEIS = 6,
    NOVE = 9,
    DOZE = 12,
    CORRER = -1
};

class Truco
{
    private:

    int quemPediuTruco = -1; // -1 indica que ninguém pediu truco
    int quemAceitouTruco;
    EstadoTruco estadoAtual;
    Jogador jogadores[2];

    public:

    Truco() : quemPediuTruco(0), quemAceitouTruco(0) {}

    EstadoTruco pedirTruco(Jogador jogadores[],int jogadorIndex)
    {
        EstadoTruco TrucoEscolha;
        int ecolha = 0;

        std::cout << jogadores[jogadorIndex] << " Quer pedir Truco?"<<std::endl;
        std::cout<<"[1] Sim\n[2] Nao"<<std::endl;
        std::cin>>ecolha;

        if(ecolha == 1)
        {
            quemPediuTruco = jogadorIndex;
            std::cout << jogadores[jogadorIndex] << " pediu Truco!"<<std::endl;
            TrucoEscolha = TRUCO;
        }
        else if(ecolha == 2)
        {
            // Ninguém pediu truco
            TrucoEscolha = NORMAL;
        }

        setEstadoAtual(TrucoEscolha);

        return TrucoEscolha;
    } 

    EstadoTruco aceitarTrucoOuAuementar(Jogador jogadores,int jogadorIndex, EstadoTruco estadoAtual)
    {
        EstadoTruco TrucoEscolha;
        int escolha = 0;

        if(quemPediuTruco != -1 && quemPediuTruco != jogadorIndex)
        {
            std::cout<<jogadores[jogadorIndex]<< " Quer aceitar o Truco?"<<std::endl;
            std::cout<<"[1] Sim\n[2] Nao\n[3]aumentar"<<std::endl;
            std::cin>>escolha;

            if(escolha == 1)
            {
                quemAceitouTruco = jogadorIndex;
                std::cout<<jogadores[jogadorIndex]<< " aceitou o Truco!"<<std::endl;
                TrucoEscolha = getEstadoAtual();
            }
            else if(escolha == 2)
            {
                TrucoEscolha = CORRER;
                std::cout<<jogadores[jogadorIndex]<< " correu do Truco!"<<std::endl;
            }
            else if(escolha == 3)
            {
                AumentarTruco(estadoAtual, jogadores, jogadorIndex + 1);
            }

            setEstadoAtual(TrucoEscolha);
        }

        return TrucoEscolha;
    }

    EstadoTruco AumentarTruco(EstadoTruco estadoAtual,Jogador jogadores[], int jogadorIndex)
    {
        EstadoTruco TrucoEscolha;
        int escolha = 0;

        if(estadoAtual == TRUCO && quemPediuTruco != jogadorIndex)
        {
            std::cout << jogadores[jogadorIndex] << " Quer aumentar o Truco para 6?" << std::endl;
            std::cout << "[1] Sim\n[2] Nao\n[3] Correr" << std::endl;
            std::cin >> escolha;

            if(escolha == 1)
            {
                quemPediuTruco = jogadorIndex;
                std::cout << jogadores[jogadorIndex] << " aumentou o Truco para 6!" << std::endl;
                TrucoEscolha = SEIS;
                setEstadoAtual(TrucoEscolha);
            }
            else if(escolha == 2)
            {
                TrucoEscolha = estadoAtual;
                std::cout << jogadores[jogadorIndex] << " nao aumentou o Truco!" << std::endl;
            }
            else if(escolha == 3)
            {
                TrucoEscolha = CORRER;
                std::cout << jogadores[jogadorIndex] << " correu do Truco!" << std::endl;
                setEstadoAtual(TrucoEscolha);
            }
        }
        else if(estadoAtual) == SEIS && quemPediuTruco != jogadorIndex)
        {
            std::cout << jogadores[jogadorIndex] << " Quer aumentar o Truco para 9?" << std::endl;
            std::cout << "[1] Sim\n[2] Nao\n [3] Correr" << std::endl;
            std::cin >> escolha;

            if(escolha == 1)
            {
                quemPediuTruco = jogadorIndex;
                std::cout << jogadores[jogadorIndex] << " aumentou o Truco para 9!" << std::endl;
                TrucoEscolha = NOVE;
                setEstadoAtual(TrucoEscolha);
            }
            else if(escolha == 2)
            {
                TrucoEscolha = getEstadoAtual();
                std::cout << jogadores[jogadorIndex] << " nao aumentou o Truco!" << std::endl;
            }
            else if(escolha == 3)
            {
                TrucoEscolha = CORRER;
                std::cout << jogadores[jogadorIndex] << " correu do Truco!" << std::endl;
                setEstadoAtual(TrucoEscolha);

            }
        } 
        else if(estadoAtual == NOVE && quemPediuTruco != jogadorIndex)
        {
            std::cout << jogadores[jogadorIndex] << " Quer aumentar o Truco para 12?" << std::endl;
            std::cout << "[1] Sim\n[2] Nao\n [3] Correr" << std::endl;
            std::cin >> escolha;

            if(escolha == 1 )
            {
                quemPediuTruco = jogadorIndex; 
                std::cout << jogadores[jogadorIndex] << " aumentou o Truco para 12!" << std::endl;
                TrucoEscolha = DOZE;
                setEstadoAtual(TrucoEscolha);
            }
            else if(escolha == 2)
            {
                TrucoEscolha = getEstadoAtual();
                std::cout << jogadores[jogadorIndex] << " nao aumentou o Truco!" << std::endl;
                setEstadoAtual(TrucoEscolha);
            }
            else if(escolha == 3)
            {
                TrucoEscolha = CORRER;
                std::cout << jogadores[jogadorIndex] << " correu do Truco!" << std::endl;
                setEstadoAtual(TrucoEscolha);
            }
        }  

        return getEstadoAtual();
}
    

    void setEstadoAtual(EstadoTruco estadoAtual)
    {
        if (estadoAtual == NORMAL || estadoAtual == TRUCO || estadoAtual == SEIS || estadoAtual == NOVE || estadoAtual == DOZE || estadoAtual == CORRER)
        {   
            this->estadoAtual = estadoAtual;
        }
    }

    EstadoTruco getEstadoAtual() const
    {
        return this->estadoAtual;
    }
};